// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package prefect

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/ru5j4r0/pulumi-prefect/sdk/go/prefect/internal"
)

// Get information about an existing Account Member (user)	by their email.
// <br>
// Use this data source to obtain user or actor IDs to manage Workspace Access.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/ru5j4r0/pulumi-prefect/sdk/go/prefect"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := prefect.GetAccountMember(ctx, &prefect.GetAccountMemberArgs{
//				Email: "marvin@prefect.io",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetAccountMember(ctx *pulumi.Context, args *GetAccountMemberArgs, opts ...pulumi.InvokeOption) (*GetAccountMemberResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetAccountMemberResult
	err := ctx.Invoke("prefect:index/getAccountMember:getAccountMember", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAccountMember.
type GetAccountMemberArgs struct {
	// Account ID (UUID) where the member resides
	AccountId *string `pulumi:"accountId"`
	// Member email
	Email string `pulumi:"email"`
}

// A collection of values returned by getAccountMember.
type GetAccountMemberResult struct {
	// Account ID (UUID) where the member resides
	AccountId *string `pulumi:"accountId"`
	// Acount Role ID (UUID)
	AccountRoleId string `pulumi:"accountRoleId"`
	// Name of Account Role assigned to member
	AccountRoleName string `pulumi:"accountRoleName"`
	// Actor ID (UUID)
	ActorId string `pulumi:"actorId"`
	// Member email
	Email string `pulumi:"email"`
	// Member's first name
	FirstName string `pulumi:"firstName"`
	// Member handle, or a human-readable identifier
	Handle string `pulumi:"handle"`
	// Account Member ID (UUID)
	Id string `pulumi:"id"`
	// Member's last name
	LastName string `pulumi:"lastName"`
	// User ID (UUID)
	UserId string `pulumi:"userId"`
}

func GetAccountMemberOutput(ctx *pulumi.Context, args GetAccountMemberOutputArgs, opts ...pulumi.InvokeOption) GetAccountMemberResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetAccountMemberResult, error) {
			args := v.(GetAccountMemberArgs)
			r, err := GetAccountMember(ctx, &args, opts...)
			var s GetAccountMemberResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetAccountMemberResultOutput)
}

// A collection of arguments for invoking getAccountMember.
type GetAccountMemberOutputArgs struct {
	// Account ID (UUID) where the member resides
	AccountId pulumi.StringPtrInput `pulumi:"accountId"`
	// Member email
	Email pulumi.StringInput `pulumi:"email"`
}

func (GetAccountMemberOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAccountMemberArgs)(nil)).Elem()
}

// A collection of values returned by getAccountMember.
type GetAccountMemberResultOutput struct{ *pulumi.OutputState }

func (GetAccountMemberResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAccountMemberResult)(nil)).Elem()
}

func (o GetAccountMemberResultOutput) ToGetAccountMemberResultOutput() GetAccountMemberResultOutput {
	return o
}

func (o GetAccountMemberResultOutput) ToGetAccountMemberResultOutputWithContext(ctx context.Context) GetAccountMemberResultOutput {
	return o
}

// Account ID (UUID) where the member resides
func (o GetAccountMemberResultOutput) AccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAccountMemberResult) *string { return v.AccountId }).(pulumi.StringPtrOutput)
}

// Acount Role ID (UUID)
func (o GetAccountMemberResultOutput) AccountRoleId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccountMemberResult) string { return v.AccountRoleId }).(pulumi.StringOutput)
}

// Name of Account Role assigned to member
func (o GetAccountMemberResultOutput) AccountRoleName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccountMemberResult) string { return v.AccountRoleName }).(pulumi.StringOutput)
}

// Actor ID (UUID)
func (o GetAccountMemberResultOutput) ActorId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccountMemberResult) string { return v.ActorId }).(pulumi.StringOutput)
}

// Member email
func (o GetAccountMemberResultOutput) Email() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccountMemberResult) string { return v.Email }).(pulumi.StringOutput)
}

// Member's first name
func (o GetAccountMemberResultOutput) FirstName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccountMemberResult) string { return v.FirstName }).(pulumi.StringOutput)
}

// Member handle, or a human-readable identifier
func (o GetAccountMemberResultOutput) Handle() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccountMemberResult) string { return v.Handle }).(pulumi.StringOutput)
}

// Account Member ID (UUID)
func (o GetAccountMemberResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccountMemberResult) string { return v.Id }).(pulumi.StringOutput)
}

// Member's last name
func (o GetAccountMemberResultOutput) LastName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccountMemberResult) string { return v.LastName }).(pulumi.StringOutput)
}

// User ID (UUID)
func (o GetAccountMemberResultOutput) UserId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccountMemberResult) string { return v.UserId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetAccountMemberResultOutput{})
}
