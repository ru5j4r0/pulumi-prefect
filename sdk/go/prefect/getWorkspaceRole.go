// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package prefect

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/ru5j4r0/pulumi-prefect/sdk/go/prefect/internal"
)

// Get information about an existing Workspace Role.
// <br>
// Use this data source read down the pre-defined Roles, to manage User and Service Account access.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/ru5j4r0/pulumi-prefect/sdk/go/prefect"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := prefect.LookupWorkspaceRole(ctx, &prefect.LookupWorkspaceRoleArgs{
//				Name: "Owner",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = prefect.LookupWorkspaceRole(ctx, &prefect.LookupWorkspaceRoleArgs{
//				Name: "Worker",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = prefect.LookupWorkspaceRole(ctx, &prefect.LookupWorkspaceRoleArgs{
//				Name: "Developer",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = prefect.LookupWorkspaceRole(ctx, &prefect.LookupWorkspaceRoleArgs{
//				Name: "Viewer",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = prefect.LookupWorkspaceRole(ctx, &prefect.LookupWorkspaceRoleArgs{
//				Name: "Runner",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupWorkspaceRole(ctx *pulumi.Context, args *LookupWorkspaceRoleArgs, opts ...pulumi.InvokeOption) (*LookupWorkspaceRoleResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupWorkspaceRoleResult
	err := ctx.Invoke("prefect:index/getWorkspaceRole:getWorkspaceRole", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getWorkspaceRole.
type LookupWorkspaceRoleArgs struct {
	// Account ID (UUID) where Workspace Role resides
	AccountId *string `pulumi:"accountId"`
	// Name of the Workspace Role
	Name string `pulumi:"name"`
}

// A collection of values returned by getWorkspaceRole.
type LookupWorkspaceRoleResult struct {
	// Account ID (UUID) where Workspace Role resides
	AccountId *string `pulumi:"accountId"`
	// Timestamp of when the resource was created (RFC3339)
	Created string `pulumi:"created"`
	// Description of the Workspace Role
	Description string `pulumi:"description"`
	// Workspace Role ID (UUID)
	Id string `pulumi:"id"`
	// Workspace Role ID (UUID), whose permissions are inherited by this Workspace Role
	InheritedRoleId string `pulumi:"inheritedRoleId"`
	// Name of the Workspace Role
	Name string `pulumi:"name"`
	// List of scopes linked to the Workspace Role
	Scopes []string `pulumi:"scopes"`
	// Timestamp of when the resource was updated (RFC3339)
	Updated string `pulumi:"updated"`
}

func LookupWorkspaceRoleOutput(ctx *pulumi.Context, args LookupWorkspaceRoleOutputArgs, opts ...pulumi.InvokeOption) LookupWorkspaceRoleResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupWorkspaceRoleResult, error) {
			args := v.(LookupWorkspaceRoleArgs)
			r, err := LookupWorkspaceRole(ctx, &args, opts...)
			var s LookupWorkspaceRoleResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupWorkspaceRoleResultOutput)
}

// A collection of arguments for invoking getWorkspaceRole.
type LookupWorkspaceRoleOutputArgs struct {
	// Account ID (UUID) where Workspace Role resides
	AccountId pulumi.StringPtrInput `pulumi:"accountId"`
	// Name of the Workspace Role
	Name pulumi.StringInput `pulumi:"name"`
}

func (LookupWorkspaceRoleOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupWorkspaceRoleArgs)(nil)).Elem()
}

// A collection of values returned by getWorkspaceRole.
type LookupWorkspaceRoleResultOutput struct{ *pulumi.OutputState }

func (LookupWorkspaceRoleResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupWorkspaceRoleResult)(nil)).Elem()
}

func (o LookupWorkspaceRoleResultOutput) ToLookupWorkspaceRoleResultOutput() LookupWorkspaceRoleResultOutput {
	return o
}

func (o LookupWorkspaceRoleResultOutput) ToLookupWorkspaceRoleResultOutputWithContext(ctx context.Context) LookupWorkspaceRoleResultOutput {
	return o
}

// Account ID (UUID) where Workspace Role resides
func (o LookupWorkspaceRoleResultOutput) AccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupWorkspaceRoleResult) *string { return v.AccountId }).(pulumi.StringPtrOutput)
}

// Timestamp of when the resource was created (RFC3339)
func (o LookupWorkspaceRoleResultOutput) Created() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkspaceRoleResult) string { return v.Created }).(pulumi.StringOutput)
}

// Description of the Workspace Role
func (o LookupWorkspaceRoleResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkspaceRoleResult) string { return v.Description }).(pulumi.StringOutput)
}

// Workspace Role ID (UUID)
func (o LookupWorkspaceRoleResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkspaceRoleResult) string { return v.Id }).(pulumi.StringOutput)
}

// Workspace Role ID (UUID), whose permissions are inherited by this Workspace Role
func (o LookupWorkspaceRoleResultOutput) InheritedRoleId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkspaceRoleResult) string { return v.InheritedRoleId }).(pulumi.StringOutput)
}

// Name of the Workspace Role
func (o LookupWorkspaceRoleResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkspaceRoleResult) string { return v.Name }).(pulumi.StringOutput)
}

// List of scopes linked to the Workspace Role
func (o LookupWorkspaceRoleResultOutput) Scopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupWorkspaceRoleResult) []string { return v.Scopes }).(pulumi.StringArrayOutput)
}

// Timestamp of when the resource was updated (RFC3339)
func (o LookupWorkspaceRoleResultOutput) Updated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupWorkspaceRoleResult) string { return v.Updated }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupWorkspaceRoleResultOutput{})
}
