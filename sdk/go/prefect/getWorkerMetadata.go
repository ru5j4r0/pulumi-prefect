// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package prefect

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/ru5j4r0/pulumi-prefect/sdk/go/prefect/internal"
)

// Get metadata information about the common Worker types, such as Kubernetes, ECS, etc.
// <br>
// Use this data source to get the default base job configurations for those common Worker types.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/ru5j4r0/pulumi-prefect/sdk/go/prefect"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			workerMetadata, err := prefect.GetWorkerMetadata(ctx, nil, nil)
//			if err != nil {
//				return err
//			}
//			_, err = prefect.NewWorkPool(ctx, "kubernetes", &prefect.WorkPoolArgs{
//				Type:            pulumi.String("kubernetes"),
//				WorkspaceId:     pulumi.Any(data.Prefect_workspace.Prd.Id),
//				Paused:          pulumi.Bool(false),
//				BaseJobTemplate: pulumi.String(workerMetadata.BaseJobConfigs.Kubernetes),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = prefect.NewWorkPool(ctx, "ecs", &prefect.WorkPoolArgs{
//				Type:            pulumi.String("ecs"),
//				WorkspaceId:     pulumi.Any(data.Prefect_workspace.Prd.Id),
//				Paused:          pulumi.Bool(false),
//				BaseJobTemplate: pulumi.String(workerMetadata.BaseJobConfigs.Ecs),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = prefect.NewWorkPool(ctx, "process", &prefect.WorkPoolArgs{
//				Type:            pulumi.String("cloud-run:push"),
//				WorkspaceId:     pulumi.Any(data.Prefect_workspace.Prd.Id),
//				Paused:          pulumi.Bool(false),
//				BaseJobTemplate: pulumi.String(workerMetadata.BaseJobConfigs.CloudRunPush),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetWorkerMetadata(ctx *pulumi.Context, opts ...pulumi.InvokeOption) (*GetWorkerMetadataResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetWorkerMetadataResult
	err := ctx.Invoke("prefect:index/getWorkerMetadata:getWorkerMetadata", nil, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of values returned by getWorkerMetadata.
type GetWorkerMetadataResult struct {
	// A map of default base job configurations (JSON) for each of the primary worker types
	BaseJobConfigs GetWorkerMetadataBaseJobConfigs `pulumi:"baseJobConfigs"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
}

func GetWorkerMetadataOutput(ctx *pulumi.Context, opts ...pulumi.InvokeOption) GetWorkerMetadataResultOutput {
	return pulumi.ToOutput(0).ApplyT(func(int) (GetWorkerMetadataResult, error) {
		r, err := GetWorkerMetadata(ctx, opts...)
		var s GetWorkerMetadataResult
		if r != nil {
			s = *r
		}
		return s, err
	}).(GetWorkerMetadataResultOutput)
}

// A collection of values returned by getWorkerMetadata.
type GetWorkerMetadataResultOutput struct{ *pulumi.OutputState }

func (GetWorkerMetadataResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWorkerMetadataResult)(nil)).Elem()
}

func (o GetWorkerMetadataResultOutput) ToGetWorkerMetadataResultOutput() GetWorkerMetadataResultOutput {
	return o
}

func (o GetWorkerMetadataResultOutput) ToGetWorkerMetadataResultOutputWithContext(ctx context.Context) GetWorkerMetadataResultOutput {
	return o
}

// A map of default base job configurations (JSON) for each of the primary worker types
func (o GetWorkerMetadataResultOutput) BaseJobConfigs() GetWorkerMetadataBaseJobConfigsOutput {
	return o.ApplyT(func(v GetWorkerMetadataResult) GetWorkerMetadataBaseJobConfigs { return v.BaseJobConfigs }).(GetWorkerMetadataBaseJobConfigsOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetWorkerMetadataResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetWorkerMetadataResult) string { return v.Id }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetWorkerMetadataResultOutput{})
}
