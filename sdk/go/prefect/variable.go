// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package prefect

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/ru5j4r0/pulumi-prefect/sdk/go/prefect/internal"
)

// The resource `variable` represents a Prefect Cloud Variable. Variables enable you to store and reuse non-sensitive information in your flows.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/ru5j4r0/pulumi-prefect/sdk/go/prefect"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := prefect.NewVariable(ctx, "example", &prefect.VariableArgs{
//				Value: pulumi.String("variable value goes here"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Prefect Variables can be imported via name in the form `name/name_of_variable`
//
// ```sh
// $ pulumi import prefect:index/variable:Variable example name/name_of_variable
// ```
//
// # Prefect Variables can also be imported via UUID
//
// ```sh
// $ pulumi import prefect:index/variable:Variable example 00000000-0000-0000-0000-000000000000
// ```
type Variable struct {
	pulumi.CustomResourceState

	// Account ID (UUID), defaults to the account set in the provider
	AccountId pulumi.StringPtrOutput `pulumi:"accountId"`
	// Timestamp of when the resource was created (RFC3339)
	Created pulumi.StringOutput `pulumi:"created"`
	// Name of the variable
	Name pulumi.StringOutput `pulumi:"name"`
	// Tags associated with the variable
	Tags pulumi.StringArrayOutput `pulumi:"tags"`
	// Timestamp of when the resource was updated (RFC3339)
	Updated pulumi.StringOutput `pulumi:"updated"`
	// Value of the variable
	Value pulumi.StringOutput `pulumi:"value"`
	// Workspace ID (UUID), defaults to the workspace set in the provider
	WorkspaceId pulumi.StringPtrOutput `pulumi:"workspaceId"`
}

// NewVariable registers a new resource with the given unique name, arguments, and options.
func NewVariable(ctx *pulumi.Context,
	name string, args *VariableArgs, opts ...pulumi.ResourceOption) (*Variable, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Value == nil {
		return nil, errors.New("invalid value for required argument 'Value'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Variable
	err := ctx.RegisterResource("prefect:index/variable:Variable", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVariable gets an existing Variable resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVariable(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VariableState, opts ...pulumi.ResourceOption) (*Variable, error) {
	var resource Variable
	err := ctx.ReadResource("prefect:index/variable:Variable", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Variable resources.
type variableState struct {
	// Account ID (UUID), defaults to the account set in the provider
	AccountId *string `pulumi:"accountId"`
	// Timestamp of when the resource was created (RFC3339)
	Created *string `pulumi:"created"`
	// Name of the variable
	Name *string `pulumi:"name"`
	// Tags associated with the variable
	Tags []string `pulumi:"tags"`
	// Timestamp of when the resource was updated (RFC3339)
	Updated *string `pulumi:"updated"`
	// Value of the variable
	Value *string `pulumi:"value"`
	// Workspace ID (UUID), defaults to the workspace set in the provider
	WorkspaceId *string `pulumi:"workspaceId"`
}

type VariableState struct {
	// Account ID (UUID), defaults to the account set in the provider
	AccountId pulumi.StringPtrInput
	// Timestamp of when the resource was created (RFC3339)
	Created pulumi.StringPtrInput
	// Name of the variable
	Name pulumi.StringPtrInput
	// Tags associated with the variable
	Tags pulumi.StringArrayInput
	// Timestamp of when the resource was updated (RFC3339)
	Updated pulumi.StringPtrInput
	// Value of the variable
	Value pulumi.StringPtrInput
	// Workspace ID (UUID), defaults to the workspace set in the provider
	WorkspaceId pulumi.StringPtrInput
}

func (VariableState) ElementType() reflect.Type {
	return reflect.TypeOf((*variableState)(nil)).Elem()
}

type variableArgs struct {
	// Account ID (UUID), defaults to the account set in the provider
	AccountId *string `pulumi:"accountId"`
	// Name of the variable
	Name *string `pulumi:"name"`
	// Tags associated with the variable
	Tags []string `pulumi:"tags"`
	// Value of the variable
	Value string `pulumi:"value"`
	// Workspace ID (UUID), defaults to the workspace set in the provider
	WorkspaceId *string `pulumi:"workspaceId"`
}

// The set of arguments for constructing a Variable resource.
type VariableArgs struct {
	// Account ID (UUID), defaults to the account set in the provider
	AccountId pulumi.StringPtrInput
	// Name of the variable
	Name pulumi.StringPtrInput
	// Tags associated with the variable
	Tags pulumi.StringArrayInput
	// Value of the variable
	Value pulumi.StringInput
	// Workspace ID (UUID), defaults to the workspace set in the provider
	WorkspaceId pulumi.StringPtrInput
}

func (VariableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*variableArgs)(nil)).Elem()
}

type VariableInput interface {
	pulumi.Input

	ToVariableOutput() VariableOutput
	ToVariableOutputWithContext(ctx context.Context) VariableOutput
}

func (*Variable) ElementType() reflect.Type {
	return reflect.TypeOf((**Variable)(nil)).Elem()
}

func (i *Variable) ToVariableOutput() VariableOutput {
	return i.ToVariableOutputWithContext(context.Background())
}

func (i *Variable) ToVariableOutputWithContext(ctx context.Context) VariableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VariableOutput)
}

// VariableArrayInput is an input type that accepts VariableArray and VariableArrayOutput values.
// You can construct a concrete instance of `VariableArrayInput` via:
//
//	VariableArray{ VariableArgs{...} }
type VariableArrayInput interface {
	pulumi.Input

	ToVariableArrayOutput() VariableArrayOutput
	ToVariableArrayOutputWithContext(context.Context) VariableArrayOutput
}

type VariableArray []VariableInput

func (VariableArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Variable)(nil)).Elem()
}

func (i VariableArray) ToVariableArrayOutput() VariableArrayOutput {
	return i.ToVariableArrayOutputWithContext(context.Background())
}

func (i VariableArray) ToVariableArrayOutputWithContext(ctx context.Context) VariableArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VariableArrayOutput)
}

// VariableMapInput is an input type that accepts VariableMap and VariableMapOutput values.
// You can construct a concrete instance of `VariableMapInput` via:
//
//	VariableMap{ "key": VariableArgs{...} }
type VariableMapInput interface {
	pulumi.Input

	ToVariableMapOutput() VariableMapOutput
	ToVariableMapOutputWithContext(context.Context) VariableMapOutput
}

type VariableMap map[string]VariableInput

func (VariableMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Variable)(nil)).Elem()
}

func (i VariableMap) ToVariableMapOutput() VariableMapOutput {
	return i.ToVariableMapOutputWithContext(context.Background())
}

func (i VariableMap) ToVariableMapOutputWithContext(ctx context.Context) VariableMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VariableMapOutput)
}

type VariableOutput struct{ *pulumi.OutputState }

func (VariableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Variable)(nil)).Elem()
}

func (o VariableOutput) ToVariableOutput() VariableOutput {
	return o
}

func (o VariableOutput) ToVariableOutputWithContext(ctx context.Context) VariableOutput {
	return o
}

// Account ID (UUID), defaults to the account set in the provider
func (o VariableOutput) AccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Variable) pulumi.StringPtrOutput { return v.AccountId }).(pulumi.StringPtrOutput)
}

// Timestamp of when the resource was created (RFC3339)
func (o VariableOutput) Created() pulumi.StringOutput {
	return o.ApplyT(func(v *Variable) pulumi.StringOutput { return v.Created }).(pulumi.StringOutput)
}

// Name of the variable
func (o VariableOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Variable) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Tags associated with the variable
func (o VariableOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Variable) pulumi.StringArrayOutput { return v.Tags }).(pulumi.StringArrayOutput)
}

// Timestamp of when the resource was updated (RFC3339)
func (o VariableOutput) Updated() pulumi.StringOutput {
	return o.ApplyT(func(v *Variable) pulumi.StringOutput { return v.Updated }).(pulumi.StringOutput)
}

// Value of the variable
func (o VariableOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v *Variable) pulumi.StringOutput { return v.Value }).(pulumi.StringOutput)
}

// Workspace ID (UUID), defaults to the workspace set in the provider
func (o VariableOutput) WorkspaceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Variable) pulumi.StringPtrOutput { return v.WorkspaceId }).(pulumi.StringPtrOutput)
}

type VariableArrayOutput struct{ *pulumi.OutputState }

func (VariableArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Variable)(nil)).Elem()
}

func (o VariableArrayOutput) ToVariableArrayOutput() VariableArrayOutput {
	return o
}

func (o VariableArrayOutput) ToVariableArrayOutputWithContext(ctx context.Context) VariableArrayOutput {
	return o
}

func (o VariableArrayOutput) Index(i pulumi.IntInput) VariableOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Variable {
		return vs[0].([]*Variable)[vs[1].(int)]
	}).(VariableOutput)
}

type VariableMapOutput struct{ *pulumi.OutputState }

func (VariableMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Variable)(nil)).Elem()
}

func (o VariableMapOutput) ToVariableMapOutput() VariableMapOutput {
	return o
}

func (o VariableMapOutput) ToVariableMapOutputWithContext(ctx context.Context) VariableMapOutput {
	return o
}

func (o VariableMapOutput) MapIndex(k pulumi.StringInput) VariableOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Variable {
		return vs[0].(map[string]*Variable)[vs[1].(string)]
	}).(VariableOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*VariableInput)(nil)).Elem(), &Variable{})
	pulumi.RegisterInputType(reflect.TypeOf((*VariableArrayInput)(nil)).Elem(), VariableArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VariableMapInput)(nil)).Elem(), VariableMap{})
	pulumi.RegisterOutputType(VariableOutput{})
	pulumi.RegisterOutputType(VariableArrayOutput{})
	pulumi.RegisterOutputType(VariableMapOutput{})
}
