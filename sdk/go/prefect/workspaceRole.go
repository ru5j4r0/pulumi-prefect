// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package prefect

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/ru5j4r0/pulumi-prefect/sdk/go/prefect/internal"
)

// The resource `workspaceRole` represents a Prefect Cloud Workspace Role. Workspace Roles hold a set of permissions to a specific Workspace, and can be attached to an accessor (User or Service Account) to grant access to the Workspace.
//
// To obtain a list of available scopes, please refer to the `GET /api/workspace_scopes` [API](https://app.prefect.cloud/api/docs#tag/Workspace-Scopes/operation/get_workspace_scopes_api_workspace_scopes_get)
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/ru5j4r0/pulumi-prefect/sdk/go/prefect"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := prefect.NewWorkspaceRole(ctx, "example", &prefect.WorkspaceRoleArgs{
//				Scopes: pulumi.StringArray{
//					pulumi.String("manage_blocks"),
//					pulumi.String("see_flows"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// # Prefect Workspace Roles can be imported using the workspace role's UUID
//
// ```sh
// $ pulumi import prefect:index/workspaceRole:WorkspaceRole example 00000000-0000-0000-0000-000000000000
// ```
type WorkspaceRole struct {
	pulumi.CustomResourceState

	// Account ID (UUID), defaults to the account set in the provider
	AccountId pulumi.StringOutput `pulumi:"accountId"`
	// Timestamp of when the resource was created (RFC3339)
	Created pulumi.StringOutput `pulumi:"created"`
	// Description of the Workspace Role
	Description pulumi.StringOutput `pulumi:"description"`
	// Workspace Role ID (UUID), whose permissions are inherited by this Workspace Role
	InheritedRoleId pulumi.StringPtrOutput `pulumi:"inheritedRoleId"`
	// Name of the Workspace Role
	Name pulumi.StringOutput `pulumi:"name"`
	// List of scopes linked to the Workspace Role
	Scopes pulumi.StringArrayOutput `pulumi:"scopes"`
	// Timestamp of when the resource was updated (RFC3339)
	Updated pulumi.StringOutput `pulumi:"updated"`
}

// NewWorkspaceRole registers a new resource with the given unique name, arguments, and options.
func NewWorkspaceRole(ctx *pulumi.Context,
	name string, args *WorkspaceRoleArgs, opts ...pulumi.ResourceOption) (*WorkspaceRole, error) {
	if args == nil {
		args = &WorkspaceRoleArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource WorkspaceRole
	err := ctx.RegisterResource("prefect:index/workspaceRole:WorkspaceRole", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWorkspaceRole gets an existing WorkspaceRole resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWorkspaceRole(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WorkspaceRoleState, opts ...pulumi.ResourceOption) (*WorkspaceRole, error) {
	var resource WorkspaceRole
	err := ctx.ReadResource("prefect:index/workspaceRole:WorkspaceRole", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WorkspaceRole resources.
type workspaceRoleState struct {
	// Account ID (UUID), defaults to the account set in the provider
	AccountId *string `pulumi:"accountId"`
	// Timestamp of when the resource was created (RFC3339)
	Created *string `pulumi:"created"`
	// Description of the Workspace Role
	Description *string `pulumi:"description"`
	// Workspace Role ID (UUID), whose permissions are inherited by this Workspace Role
	InheritedRoleId *string `pulumi:"inheritedRoleId"`
	// Name of the Workspace Role
	Name *string `pulumi:"name"`
	// List of scopes linked to the Workspace Role
	Scopes []string `pulumi:"scopes"`
	// Timestamp of when the resource was updated (RFC3339)
	Updated *string `pulumi:"updated"`
}

type WorkspaceRoleState struct {
	// Account ID (UUID), defaults to the account set in the provider
	AccountId pulumi.StringPtrInput
	// Timestamp of when the resource was created (RFC3339)
	Created pulumi.StringPtrInput
	// Description of the Workspace Role
	Description pulumi.StringPtrInput
	// Workspace Role ID (UUID), whose permissions are inherited by this Workspace Role
	InheritedRoleId pulumi.StringPtrInput
	// Name of the Workspace Role
	Name pulumi.StringPtrInput
	// List of scopes linked to the Workspace Role
	Scopes pulumi.StringArrayInput
	// Timestamp of when the resource was updated (RFC3339)
	Updated pulumi.StringPtrInput
}

func (WorkspaceRoleState) ElementType() reflect.Type {
	return reflect.TypeOf((*workspaceRoleState)(nil)).Elem()
}

type workspaceRoleArgs struct {
	// Description of the Workspace Role
	Description *string `pulumi:"description"`
	// Workspace Role ID (UUID), whose permissions are inherited by this Workspace Role
	InheritedRoleId *string `pulumi:"inheritedRoleId"`
	// Name of the Workspace Role
	Name *string `pulumi:"name"`
	// List of scopes linked to the Workspace Role
	Scopes []string `pulumi:"scopes"`
}

// The set of arguments for constructing a WorkspaceRole resource.
type WorkspaceRoleArgs struct {
	// Description of the Workspace Role
	Description pulumi.StringPtrInput
	// Workspace Role ID (UUID), whose permissions are inherited by this Workspace Role
	InheritedRoleId pulumi.StringPtrInput
	// Name of the Workspace Role
	Name pulumi.StringPtrInput
	// List of scopes linked to the Workspace Role
	Scopes pulumi.StringArrayInput
}

func (WorkspaceRoleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*workspaceRoleArgs)(nil)).Elem()
}

type WorkspaceRoleInput interface {
	pulumi.Input

	ToWorkspaceRoleOutput() WorkspaceRoleOutput
	ToWorkspaceRoleOutputWithContext(ctx context.Context) WorkspaceRoleOutput
}

func (*WorkspaceRole) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceRole)(nil)).Elem()
}

func (i *WorkspaceRole) ToWorkspaceRoleOutput() WorkspaceRoleOutput {
	return i.ToWorkspaceRoleOutputWithContext(context.Background())
}

func (i *WorkspaceRole) ToWorkspaceRoleOutputWithContext(ctx context.Context) WorkspaceRoleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceRoleOutput)
}

// WorkspaceRoleArrayInput is an input type that accepts WorkspaceRoleArray and WorkspaceRoleArrayOutput values.
// You can construct a concrete instance of `WorkspaceRoleArrayInput` via:
//
//	WorkspaceRoleArray{ WorkspaceRoleArgs{...} }
type WorkspaceRoleArrayInput interface {
	pulumi.Input

	ToWorkspaceRoleArrayOutput() WorkspaceRoleArrayOutput
	ToWorkspaceRoleArrayOutputWithContext(context.Context) WorkspaceRoleArrayOutput
}

type WorkspaceRoleArray []WorkspaceRoleInput

func (WorkspaceRoleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WorkspaceRole)(nil)).Elem()
}

func (i WorkspaceRoleArray) ToWorkspaceRoleArrayOutput() WorkspaceRoleArrayOutput {
	return i.ToWorkspaceRoleArrayOutputWithContext(context.Background())
}

func (i WorkspaceRoleArray) ToWorkspaceRoleArrayOutputWithContext(ctx context.Context) WorkspaceRoleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceRoleArrayOutput)
}

// WorkspaceRoleMapInput is an input type that accepts WorkspaceRoleMap and WorkspaceRoleMapOutput values.
// You can construct a concrete instance of `WorkspaceRoleMapInput` via:
//
//	WorkspaceRoleMap{ "key": WorkspaceRoleArgs{...} }
type WorkspaceRoleMapInput interface {
	pulumi.Input

	ToWorkspaceRoleMapOutput() WorkspaceRoleMapOutput
	ToWorkspaceRoleMapOutputWithContext(context.Context) WorkspaceRoleMapOutput
}

type WorkspaceRoleMap map[string]WorkspaceRoleInput

func (WorkspaceRoleMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WorkspaceRole)(nil)).Elem()
}

func (i WorkspaceRoleMap) ToWorkspaceRoleMapOutput() WorkspaceRoleMapOutput {
	return i.ToWorkspaceRoleMapOutputWithContext(context.Background())
}

func (i WorkspaceRoleMap) ToWorkspaceRoleMapOutputWithContext(ctx context.Context) WorkspaceRoleMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceRoleMapOutput)
}

type WorkspaceRoleOutput struct{ *pulumi.OutputState }

func (WorkspaceRoleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceRole)(nil)).Elem()
}

func (o WorkspaceRoleOutput) ToWorkspaceRoleOutput() WorkspaceRoleOutput {
	return o
}

func (o WorkspaceRoleOutput) ToWorkspaceRoleOutputWithContext(ctx context.Context) WorkspaceRoleOutput {
	return o
}

// Account ID (UUID), defaults to the account set in the provider
func (o WorkspaceRoleOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkspaceRole) pulumi.StringOutput { return v.AccountId }).(pulumi.StringOutput)
}

// Timestamp of when the resource was created (RFC3339)
func (o WorkspaceRoleOutput) Created() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkspaceRole) pulumi.StringOutput { return v.Created }).(pulumi.StringOutput)
}

// Description of the Workspace Role
func (o WorkspaceRoleOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkspaceRole) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// Workspace Role ID (UUID), whose permissions are inherited by this Workspace Role
func (o WorkspaceRoleOutput) InheritedRoleId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceRole) pulumi.StringPtrOutput { return v.InheritedRoleId }).(pulumi.StringPtrOutput)
}

// Name of the Workspace Role
func (o WorkspaceRoleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkspaceRole) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// List of scopes linked to the Workspace Role
func (o WorkspaceRoleOutput) Scopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WorkspaceRole) pulumi.StringArrayOutput { return v.Scopes }).(pulumi.StringArrayOutput)
}

// Timestamp of when the resource was updated (RFC3339)
func (o WorkspaceRoleOutput) Updated() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkspaceRole) pulumi.StringOutput { return v.Updated }).(pulumi.StringOutput)
}

type WorkspaceRoleArrayOutput struct{ *pulumi.OutputState }

func (WorkspaceRoleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WorkspaceRole)(nil)).Elem()
}

func (o WorkspaceRoleArrayOutput) ToWorkspaceRoleArrayOutput() WorkspaceRoleArrayOutput {
	return o
}

func (o WorkspaceRoleArrayOutput) ToWorkspaceRoleArrayOutputWithContext(ctx context.Context) WorkspaceRoleArrayOutput {
	return o
}

func (o WorkspaceRoleArrayOutput) Index(i pulumi.IntInput) WorkspaceRoleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *WorkspaceRole {
		return vs[0].([]*WorkspaceRole)[vs[1].(int)]
	}).(WorkspaceRoleOutput)
}

type WorkspaceRoleMapOutput struct{ *pulumi.OutputState }

func (WorkspaceRoleMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WorkspaceRole)(nil)).Elem()
}

func (o WorkspaceRoleMapOutput) ToWorkspaceRoleMapOutput() WorkspaceRoleMapOutput {
	return o
}

func (o WorkspaceRoleMapOutput) ToWorkspaceRoleMapOutputWithContext(ctx context.Context) WorkspaceRoleMapOutput {
	return o
}

func (o WorkspaceRoleMapOutput) MapIndex(k pulumi.StringInput) WorkspaceRoleOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *WorkspaceRole {
		return vs[0].(map[string]*WorkspaceRole)[vs[1].(string)]
	}).(WorkspaceRoleOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceRoleInput)(nil)).Elem(), &WorkspaceRole{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceRoleArrayInput)(nil)).Elem(), WorkspaceRoleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceRoleMapInput)(nil)).Elem(), WorkspaceRoleMap{})
	pulumi.RegisterOutputType(WorkspaceRoleOutput{})
	pulumi.RegisterOutputType(WorkspaceRoleArrayOutput{})
	pulumi.RegisterOutputType(WorkspaceRoleMapOutput{})
}
