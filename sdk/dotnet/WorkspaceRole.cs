// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Prefect
{
    /// <summary>
    /// The resource `workspace_role` represents a Prefect Cloud Workspace Role. Workspace Roles hold a set of permissions to a specific Workspace, and can be attached to an accessor (User or Service Account) to grant access to the Workspace.
    /// 
    /// To obtain a list of available scopes, please refer to the `GET /api/workspace_scopes` [API](https://app.prefect.cloud/api/docs#tag/Workspace-Scopes/operation/get_workspace_scopes_api_workspace_scopes_get)
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Prefect = Pulumi.Prefect;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Prefect.WorkspaceRole("example", new()
    ///     {
    ///         Scopes = new[]
    ///         {
    ///             "manage_blocks",
    ///             "see_flows",
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Prefect Workspace Roles can be imported using the workspace role's UUID
    /// 
    /// ```sh
    /// $ pulumi import prefect:index/workspaceRole:WorkspaceRole example 00000000-0000-0000-0000-000000000000
    /// ```
    /// </summary>
    [PrefectResourceType("prefect:index/workspaceRole:WorkspaceRole")]
    public partial class WorkspaceRole : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Account ID (UUID), defaults to the account set in the provider
        /// </summary>
        [Output("accountId")]
        public Output<string> AccountId { get; private set; } = null!;

        /// <summary>
        /// Timestamp of when the resource was created (RFC3339)
        /// </summary>
        [Output("created")]
        public Output<string> Created { get; private set; } = null!;

        /// <summary>
        /// Description of the Workspace Role
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// Workspace Role ID (UUID), whose permissions are inherited by this Workspace Role
        /// </summary>
        [Output("inheritedRoleId")]
        public Output<string?> InheritedRoleId { get; private set; } = null!;

        /// <summary>
        /// Name of the Workspace Role
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// List of scopes linked to the Workspace Role
        /// </summary>
        [Output("scopes")]
        public Output<ImmutableArray<string>> Scopes { get; private set; } = null!;

        /// <summary>
        /// Timestamp of when the resource was updated (RFC3339)
        /// </summary>
        [Output("updated")]
        public Output<string> Updated { get; private set; } = null!;


        /// <summary>
        /// Create a WorkspaceRole resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public WorkspaceRole(string name, WorkspaceRoleArgs? args = null, CustomResourceOptions? options = null)
            : base("prefect:index/workspaceRole:WorkspaceRole", name, args ?? new WorkspaceRoleArgs(), MakeResourceOptions(options, ""))
        {
        }

        private WorkspaceRole(string name, Input<string> id, WorkspaceRoleState? state = null, CustomResourceOptions? options = null)
            : base("prefect:index/workspaceRole:WorkspaceRole", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "https://github.com/ru5j4r0/pulumi-prefect/releases/",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing WorkspaceRole resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static WorkspaceRole Get(string name, Input<string> id, WorkspaceRoleState? state = null, CustomResourceOptions? options = null)
        {
            return new WorkspaceRole(name, id, state, options);
        }
    }

    public sealed class WorkspaceRoleArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Description of the Workspace Role
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Workspace Role ID (UUID), whose permissions are inherited by this Workspace Role
        /// </summary>
        [Input("inheritedRoleId")]
        public Input<string>? InheritedRoleId { get; set; }

        /// <summary>
        /// Name of the Workspace Role
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("scopes")]
        private InputList<string>? _scopes;

        /// <summary>
        /// List of scopes linked to the Workspace Role
        /// </summary>
        public InputList<string> Scopes
        {
            get => _scopes ?? (_scopes = new InputList<string>());
            set => _scopes = value;
        }

        public WorkspaceRoleArgs()
        {
        }
        public static new WorkspaceRoleArgs Empty => new WorkspaceRoleArgs();
    }

    public sealed class WorkspaceRoleState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Account ID (UUID), defaults to the account set in the provider
        /// </summary>
        [Input("accountId")]
        public Input<string>? AccountId { get; set; }

        /// <summary>
        /// Timestamp of when the resource was created (RFC3339)
        /// </summary>
        [Input("created")]
        public Input<string>? Created { get; set; }

        /// <summary>
        /// Description of the Workspace Role
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Workspace Role ID (UUID), whose permissions are inherited by this Workspace Role
        /// </summary>
        [Input("inheritedRoleId")]
        public Input<string>? InheritedRoleId { get; set; }

        /// <summary>
        /// Name of the Workspace Role
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("scopes")]
        private InputList<string>? _scopes;

        /// <summary>
        /// List of scopes linked to the Workspace Role
        /// </summary>
        public InputList<string> Scopes
        {
            get => _scopes ?? (_scopes = new InputList<string>());
            set => _scopes = value;
        }

        /// <summary>
        /// Timestamp of when the resource was updated (RFC3339)
        /// </summary>
        [Input("updated")]
        public Input<string>? Updated { get; set; }

        public WorkspaceRoleState()
        {
        }
        public static new WorkspaceRoleState Empty => new WorkspaceRoleState();
    }
}
