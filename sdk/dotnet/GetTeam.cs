// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Prefect
{
    public static class GetTeam
    {
        /// <summary>
        /// Get information about an existing Team by their name.
        /// &lt;br&gt;
        /// Use this data source to obtain team IDs to manage Workspace Access.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Prefect = Pulumi.Prefect;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var myTeam = Prefect.GetTeam.Invoke(new()
        ///     {
        ///         Name = "my-team",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetTeamResult> InvokeAsync(GetTeamArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetTeamResult>("prefect:index/getTeam:getTeam", args ?? new GetTeamArgs(), options.WithDefaults());

        /// <summary>
        /// Get information about an existing Team by their name.
        /// &lt;br&gt;
        /// Use this data source to obtain team IDs to manage Workspace Access.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Prefect = Pulumi.Prefect;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var myTeam = Prefect.GetTeam.Invoke(new()
        ///     {
        ///         Name = "my-team",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetTeamResult> Invoke(GetTeamInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetTeamResult>("prefect:index/getTeam:getTeam", args ?? new GetTeamInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetTeamArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Account ID (UUID), defaults to the account set in the provider
        /// </summary>
        [Input("accountId")]
        public string? AccountId { get; set; }

        /// <summary>
        /// Name of Team
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        public GetTeamArgs()
        {
        }
        public static new GetTeamArgs Empty => new GetTeamArgs();
    }

    public sealed class GetTeamInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Account ID (UUID), defaults to the account set in the provider
        /// </summary>
        [Input("accountId")]
        public Input<string>? AccountId { get; set; }

        /// <summary>
        /// Name of Team
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        public GetTeamInvokeArgs()
        {
        }
        public static new GetTeamInvokeArgs Empty => new GetTeamInvokeArgs();
    }


    [OutputType]
    public sealed class GetTeamResult
    {
        /// <summary>
        /// Account ID (UUID), defaults to the account set in the provider
        /// </summary>
        public readonly string? AccountId;
        /// <summary>
        /// Date and time of the team creation in RFC 3339 format
        /// </summary>
        public readonly string Created;
        /// <summary>
        /// Description of team
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// Team ID (UUID)
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Name of Team
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Date and time that the team was last updated in RFC 3339 format
        /// </summary>
        public readonly string Updated;

        [OutputConstructor]
        private GetTeamResult(
            string? accountId,

            string created,

            string description,

            string id,

            string name,

            string updated)
        {
            AccountId = accountId;
            Created = created;
            Description = description;
            Id = id;
            Name = name;
            Updated = updated;
        }
    }
}
