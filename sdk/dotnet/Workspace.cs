// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Prefect
{
    /// <summary>
    /// The resource `workspace` represents a Prefect Cloud Workspace. Workspaces are discrete environments in Prefect Cloud for your flows, configurations, and deployments. Manage your workflows and RBAC policies using `work_pool` and `workspace_access` resources.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Prefect = Pulumi.Prefect;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Prefect.Workspace("example", new()
    ///     {
    ///         Handle = "my-workspace",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Prefect Workspaces can be imported via handle in the form `handle/workspace-handle`
    /// 
    /// ```sh
    /// $ pulumi import prefect:index/workspace:Workspace example handle/workspace-handle
    /// ```
    /// 
    /// Prefect Workspaces can also be imported via UUID
    /// 
    /// ```sh
    /// $ pulumi import prefect:index/workspace:Workspace example 00000000-0000-0000-0000-000000000000
    /// ```
    /// </summary>
    [PrefectResourceType("prefect:index/workspace:Workspace")]
    public partial class Workspace : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Account ID (UUID), defaults to the account set in the provider
        /// </summary>
        [Output("accountId")]
        public Output<string?> AccountId { get; private set; } = null!;

        /// <summary>
        /// Timestamp of when the resource was created (RFC3339)
        /// </summary>
        [Output("created")]
        public Output<string> Created { get; private set; } = null!;

        /// <summary>
        /// Description for the workspace
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// Unique handle for the workspace
        /// </summary>
        [Output("handle")]
        public Output<string> Handle { get; private set; } = null!;

        /// <summary>
        /// Name of the workspace
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Timestamp of when the resource was updated (RFC3339)
        /// </summary>
        [Output("updated")]
        public Output<string> Updated { get; private set; } = null!;


        /// <summary>
        /// Create a Workspace resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Workspace(string name, WorkspaceArgs args, CustomResourceOptions? options = null)
            : base("prefect:index/workspace:Workspace", name, args ?? new WorkspaceArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Workspace(string name, Input<string> id, WorkspaceState? state = null, CustomResourceOptions? options = null)
            : base("prefect:index/workspace:Workspace", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "https://github.com/ru5j4r0/pulumi-prefect/releases/",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Workspace resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Workspace Get(string name, Input<string> id, WorkspaceState? state = null, CustomResourceOptions? options = null)
        {
            return new Workspace(name, id, state, options);
        }
    }

    public sealed class WorkspaceArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Account ID (UUID), defaults to the account set in the provider
        /// </summary>
        [Input("accountId")]
        public Input<string>? AccountId { get; set; }

        /// <summary>
        /// Description for the workspace
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Unique handle for the workspace
        /// </summary>
        [Input("handle", required: true)]
        public Input<string> Handle { get; set; } = null!;

        /// <summary>
        /// Name of the workspace
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        public WorkspaceArgs()
        {
        }
        public static new WorkspaceArgs Empty => new WorkspaceArgs();
    }

    public sealed class WorkspaceState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Account ID (UUID), defaults to the account set in the provider
        /// </summary>
        [Input("accountId")]
        public Input<string>? AccountId { get; set; }

        /// <summary>
        /// Timestamp of when the resource was created (RFC3339)
        /// </summary>
        [Input("created")]
        public Input<string>? Created { get; set; }

        /// <summary>
        /// Description for the workspace
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Unique handle for the workspace
        /// </summary>
        [Input("handle")]
        public Input<string>? Handle { get; set; }

        /// <summary>
        /// Name of the workspace
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Timestamp of when the resource was updated (RFC3339)
        /// </summary>
        [Input("updated")]
        public Input<string>? Updated { get; set; }

        public WorkspaceState()
        {
        }
        public static new WorkspaceState Empty => new WorkspaceState();
    }
}
