// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Prefect
{
    public static class GetWorkspaceRole
    {
        /// <summary>
        /// Get information about an existing Workspace Role.
        /// &lt;br&gt;
        /// Use this data source read down the pre-defined Roles, to manage User and Service Account access.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Prefect = Pulumi.Prefect;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var owner = Prefect.GetWorkspaceRole.Invoke(new()
        ///     {
        ///         Name = "Owner",
        ///     });
        /// 
        ///     var worker = Prefect.GetWorkspaceRole.Invoke(new()
        ///     {
        ///         Name = "Worker",
        ///     });
        /// 
        ///     var developer = Prefect.GetWorkspaceRole.Invoke(new()
        ///     {
        ///         Name = "Developer",
        ///     });
        /// 
        ///     var viewer = Prefect.GetWorkspaceRole.Invoke(new()
        ///     {
        ///         Name = "Viewer",
        ///     });
        /// 
        ///     var runner = Prefect.GetWorkspaceRole.Invoke(new()
        ///     {
        ///         Name = "Runner",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetWorkspaceRoleResult> InvokeAsync(GetWorkspaceRoleArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetWorkspaceRoleResult>("prefect:index/getWorkspaceRole:getWorkspaceRole", args ?? new GetWorkspaceRoleArgs(), options.WithDefaults());

        /// <summary>
        /// Get information about an existing Workspace Role.
        /// &lt;br&gt;
        /// Use this data source read down the pre-defined Roles, to manage User and Service Account access.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Prefect = Pulumi.Prefect;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var owner = Prefect.GetWorkspaceRole.Invoke(new()
        ///     {
        ///         Name = "Owner",
        ///     });
        /// 
        ///     var worker = Prefect.GetWorkspaceRole.Invoke(new()
        ///     {
        ///         Name = "Worker",
        ///     });
        /// 
        ///     var developer = Prefect.GetWorkspaceRole.Invoke(new()
        ///     {
        ///         Name = "Developer",
        ///     });
        /// 
        ///     var viewer = Prefect.GetWorkspaceRole.Invoke(new()
        ///     {
        ///         Name = "Viewer",
        ///     });
        /// 
        ///     var runner = Prefect.GetWorkspaceRole.Invoke(new()
        ///     {
        ///         Name = "Runner",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetWorkspaceRoleResult> Invoke(GetWorkspaceRoleInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetWorkspaceRoleResult>("prefect:index/getWorkspaceRole:getWorkspaceRole", args ?? new GetWorkspaceRoleInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetWorkspaceRoleArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Account ID (UUID) where Workspace Role resides
        /// </summary>
        [Input("accountId")]
        public string? AccountId { get; set; }

        /// <summary>
        /// Name of the Workspace Role
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        public GetWorkspaceRoleArgs()
        {
        }
        public static new GetWorkspaceRoleArgs Empty => new GetWorkspaceRoleArgs();
    }

    public sealed class GetWorkspaceRoleInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Account ID (UUID) where Workspace Role resides
        /// </summary>
        [Input("accountId")]
        public Input<string>? AccountId { get; set; }

        /// <summary>
        /// Name of the Workspace Role
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        public GetWorkspaceRoleInvokeArgs()
        {
        }
        public static new GetWorkspaceRoleInvokeArgs Empty => new GetWorkspaceRoleInvokeArgs();
    }


    [OutputType]
    public sealed class GetWorkspaceRoleResult
    {
        /// <summary>
        /// Account ID (UUID) where Workspace Role resides
        /// </summary>
        public readonly string? AccountId;
        /// <summary>
        /// Timestamp of when the resource was created (RFC3339)
        /// </summary>
        public readonly string Created;
        /// <summary>
        /// Description of the Workspace Role
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// Workspace Role ID (UUID)
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Workspace Role ID (UUID), whose permissions are inherited by this Workspace Role
        /// </summary>
        public readonly string InheritedRoleId;
        /// <summary>
        /// Name of the Workspace Role
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// List of scopes linked to the Workspace Role
        /// </summary>
        public readonly ImmutableArray<string> Scopes;
        /// <summary>
        /// Timestamp of when the resource was updated (RFC3339)
        /// </summary>
        public readonly string Updated;

        [OutputConstructor]
        private GetWorkspaceRoleResult(
            string? accountId,

            string created,

            string description,

            string id,

            string inheritedRoleId,

            string name,

            ImmutableArray<string> scopes,

            string updated)
        {
            AccountId = accountId;
            Created = created;
            Description = description;
            Id = id;
            InheritedRoleId = inheritedRoleId;
            Name = name;
            Scopes = scopes;
            Updated = updated;
        }
    }
}
