// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Prefect
{
    public static class GetAccountMember
    {
        /// <summary>
        /// Get information about an existing Account Member (user)	by their email.
        /// &lt;br&gt;
        /// Use this data source to obtain user or actor IDs to manage Workspace Access.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Prefect = Pulumi.Prefect;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var marvin = Prefect.GetAccountMember.Invoke(new()
        ///     {
        ///         Email = "marvin@prefect.io",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetAccountMemberResult> InvokeAsync(GetAccountMemberArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetAccountMemberResult>("prefect:index/getAccountMember:getAccountMember", args ?? new GetAccountMemberArgs(), options.WithDefaults());

        /// <summary>
        /// Get information about an existing Account Member (user)	by their email.
        /// &lt;br&gt;
        /// Use this data source to obtain user or actor IDs to manage Workspace Access.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Prefect = Pulumi.Prefect;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var marvin = Prefect.GetAccountMember.Invoke(new()
        ///     {
        ///         Email = "marvin@prefect.io",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetAccountMemberResult> Invoke(GetAccountMemberInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetAccountMemberResult>("prefect:index/getAccountMember:getAccountMember", args ?? new GetAccountMemberInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAccountMemberArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Account ID (UUID) where the member resides
        /// </summary>
        [Input("accountId")]
        public string? AccountId { get; set; }

        /// <summary>
        /// Member email
        /// </summary>
        [Input("email", required: true)]
        public string Email { get; set; } = null!;

        public GetAccountMemberArgs()
        {
        }
        public static new GetAccountMemberArgs Empty => new GetAccountMemberArgs();
    }

    public sealed class GetAccountMemberInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Account ID (UUID) where the member resides
        /// </summary>
        [Input("accountId")]
        public Input<string>? AccountId { get; set; }

        /// <summary>
        /// Member email
        /// </summary>
        [Input("email", required: true)]
        public Input<string> Email { get; set; } = null!;

        public GetAccountMemberInvokeArgs()
        {
        }
        public static new GetAccountMemberInvokeArgs Empty => new GetAccountMemberInvokeArgs();
    }


    [OutputType]
    public sealed class GetAccountMemberResult
    {
        /// <summary>
        /// Account ID (UUID) where the member resides
        /// </summary>
        public readonly string? AccountId;
        /// <summary>
        /// Acount Role ID (UUID)
        /// </summary>
        public readonly string AccountRoleId;
        /// <summary>
        /// Name of Account Role assigned to member
        /// </summary>
        public readonly string AccountRoleName;
        /// <summary>
        /// Actor ID (UUID)
        /// </summary>
        public readonly string ActorId;
        /// <summary>
        /// Member email
        /// </summary>
        public readonly string Email;
        /// <summary>
        /// Member's first name
        /// </summary>
        public readonly string FirstName;
        /// <summary>
        /// Member handle, or a human-readable identifier
        /// </summary>
        public readonly string Handle;
        /// <summary>
        /// Account Member ID (UUID)
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Member's last name
        /// </summary>
        public readonly string LastName;
        /// <summary>
        /// User ID (UUID)
        /// </summary>
        public readonly string UserId;

        [OutputConstructor]
        private GetAccountMemberResult(
            string? accountId,

            string accountRoleId,

            string accountRoleName,

            string actorId,

            string email,

            string firstName,

            string handle,

            string id,

            string lastName,

            string userId)
        {
            AccountId = accountId;
            AccountRoleId = accountRoleId;
            AccountRoleName = accountRoleName;
            ActorId = actorId;
            Email = email;
            FirstName = firstName;
            Handle = handle;
            Id = id;
            LastName = lastName;
            UserId = userId;
        }
    }
}
