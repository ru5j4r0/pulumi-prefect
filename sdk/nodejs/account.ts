// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * ## Example Usage
 *
 * ## Import
 *
 * Prefect Accounts can be imported using the account's UUID
 *
 * ```sh
 * $ pulumi import prefect:index/account:Account example 00000000-0000-0000-0000-000000000000
 * ```
 */
export class Account extends pulumi.CustomResource {
    /**
     * Get an existing Account resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AccountState, opts?: pulumi.CustomResourceOptions): Account {
        return new Account(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'prefect:index/account:Account';

    /**
     * Returns true if the given object is an instance of Account.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Account {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Account.__pulumiType;
    }

    /**
     * Whether or not this account allows public workspaces
     */
    public readonly allowPublicWorkspaces!: pulumi.Output<boolean | undefined>;
    /**
     * Billing email to apply to the account's Stripe customer
     */
    public readonly billingEmail!: pulumi.Output<string | undefined>;
    /**
     * Timestamp of when the resource was created (RFC3339)
     */
    public /*out*/ readonly created!: pulumi.Output<string>;
    /**
     * Unique handle of the account
     */
    public readonly handle!: pulumi.Output<string>;
    /**
     * An optional for an external url associated with the account, e.g. https://prefect.io/
     */
    public readonly link!: pulumi.Output<string | undefined>;
    /**
     * An optional physical location for the account, e.g. Washington, D.C.
     */
    public readonly location!: pulumi.Output<string | undefined>;
    /**
     * Name of the account
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Timestamp of when the resource was updated (RFC3339)
     */
    public /*out*/ readonly updated!: pulumi.Output<string>;

    /**
     * Create a Account resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AccountArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AccountArgs | AccountState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AccountState | undefined;
            resourceInputs["allowPublicWorkspaces"] = state ? state.allowPublicWorkspaces : undefined;
            resourceInputs["billingEmail"] = state ? state.billingEmail : undefined;
            resourceInputs["created"] = state ? state.created : undefined;
            resourceInputs["handle"] = state ? state.handle : undefined;
            resourceInputs["link"] = state ? state.link : undefined;
            resourceInputs["location"] = state ? state.location : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["updated"] = state ? state.updated : undefined;
        } else {
            const args = argsOrState as AccountArgs | undefined;
            if ((!args || args.handle === undefined) && !opts.urn) {
                throw new Error("Missing required property 'handle'");
            }
            resourceInputs["allowPublicWorkspaces"] = args ? args.allowPublicWorkspaces : undefined;
            resourceInputs["billingEmail"] = args ? args.billingEmail : undefined;
            resourceInputs["handle"] = args ? args.handle : undefined;
            resourceInputs["link"] = args ? args.link : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["created"] = undefined /*out*/;
            resourceInputs["updated"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Account.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Account resources.
 */
export interface AccountState {
    /**
     * Whether or not this account allows public workspaces
     */
    allowPublicWorkspaces?: pulumi.Input<boolean>;
    /**
     * Billing email to apply to the account's Stripe customer
     */
    billingEmail?: pulumi.Input<string>;
    /**
     * Timestamp of when the resource was created (RFC3339)
     */
    created?: pulumi.Input<string>;
    /**
     * Unique handle of the account
     */
    handle?: pulumi.Input<string>;
    /**
     * An optional for an external url associated with the account, e.g. https://prefect.io/
     */
    link?: pulumi.Input<string>;
    /**
     * An optional physical location for the account, e.g. Washington, D.C.
     */
    location?: pulumi.Input<string>;
    /**
     * Name of the account
     */
    name?: pulumi.Input<string>;
    /**
     * Timestamp of when the resource was updated (RFC3339)
     */
    updated?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Account resource.
 */
export interface AccountArgs {
    /**
     * Whether or not this account allows public workspaces
     */
    allowPublicWorkspaces?: pulumi.Input<boolean>;
    /**
     * Billing email to apply to the account's Stripe customer
     */
    billingEmail?: pulumi.Input<string>;
    /**
     * Unique handle of the account
     */
    handle: pulumi.Input<string>;
    /**
     * An optional for an external url associated with the account, e.g. https://prefect.io/
     */
    link?: pulumi.Input<string>;
    /**
     * An optional physical location for the account, e.g. Washington, D.C.
     */
    location?: pulumi.Input<string>;
    /**
     * Name of the account
     */
    name?: pulumi.Input<string>;
}
