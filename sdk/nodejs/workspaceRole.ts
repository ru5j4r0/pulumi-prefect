// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * The resource `workspaceRole` represents a Prefect Cloud Workspace Role. Workspace Roles hold a set of permissions to a specific Workspace, and can be attached to an accessor (User or Service Account) to grant access to the Workspace.
 *
 * To obtain a list of available scopes, please refer to the `GET /api/workspace_scopes` [API](https://app.prefect.cloud/api/docs#tag/Workspace-Scopes/operation/get_workspace_scopes_api_workspace_scopes_get)
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as prefect from "@pulumi/prefect";
 *
 * const example = new prefect.WorkspaceRole("example", {scopes: [
 *     "manage_blocks",
 *     "see_flows",
 * ]});
 * ```
 *
 * ## Import
 *
 * Prefect Workspace Roles can be imported using the workspace role's UUID
 *
 * ```sh
 * $ pulumi import prefect:index/workspaceRole:WorkspaceRole example 00000000-0000-0000-0000-000000000000
 * ```
 */
export class WorkspaceRole extends pulumi.CustomResource {
    /**
     * Get an existing WorkspaceRole resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: WorkspaceRoleState, opts?: pulumi.CustomResourceOptions): WorkspaceRole {
        return new WorkspaceRole(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'prefect:index/workspaceRole:WorkspaceRole';

    /**
     * Returns true if the given object is an instance of WorkspaceRole.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is WorkspaceRole {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === WorkspaceRole.__pulumiType;
    }

    /**
     * Account ID (UUID), defaults to the account set in the provider
     */
    public /*out*/ readonly accountId!: pulumi.Output<string>;
    /**
     * Timestamp of when the resource was created (RFC3339)
     */
    public /*out*/ readonly created!: pulumi.Output<string>;
    /**
     * Description of the Workspace Role
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * Workspace Role ID (UUID), whose permissions are inherited by this Workspace Role
     */
    public readonly inheritedRoleId!: pulumi.Output<string | undefined>;
    /**
     * Name of the Workspace Role
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * List of scopes linked to the Workspace Role
     */
    public readonly scopes!: pulumi.Output<string[] | undefined>;
    /**
     * Timestamp of when the resource was updated (RFC3339)
     */
    public /*out*/ readonly updated!: pulumi.Output<string>;

    /**
     * Create a WorkspaceRole resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: WorkspaceRoleArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: WorkspaceRoleArgs | WorkspaceRoleState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as WorkspaceRoleState | undefined;
            resourceInputs["accountId"] = state ? state.accountId : undefined;
            resourceInputs["created"] = state ? state.created : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["inheritedRoleId"] = state ? state.inheritedRoleId : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["scopes"] = state ? state.scopes : undefined;
            resourceInputs["updated"] = state ? state.updated : undefined;
        } else {
            const args = argsOrState as WorkspaceRoleArgs | undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["inheritedRoleId"] = args ? args.inheritedRoleId : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["scopes"] = args ? args.scopes : undefined;
            resourceInputs["accountId"] = undefined /*out*/;
            resourceInputs["created"] = undefined /*out*/;
            resourceInputs["updated"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(WorkspaceRole.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering WorkspaceRole resources.
 */
export interface WorkspaceRoleState {
    /**
     * Account ID (UUID), defaults to the account set in the provider
     */
    accountId?: pulumi.Input<string>;
    /**
     * Timestamp of when the resource was created (RFC3339)
     */
    created?: pulumi.Input<string>;
    /**
     * Description of the Workspace Role
     */
    description?: pulumi.Input<string>;
    /**
     * Workspace Role ID (UUID), whose permissions are inherited by this Workspace Role
     */
    inheritedRoleId?: pulumi.Input<string>;
    /**
     * Name of the Workspace Role
     */
    name?: pulumi.Input<string>;
    /**
     * List of scopes linked to the Workspace Role
     */
    scopes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Timestamp of when the resource was updated (RFC3339)
     */
    updated?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a WorkspaceRole resource.
 */
export interface WorkspaceRoleArgs {
    /**
     * Description of the Workspace Role
     */
    description?: pulumi.Input<string>;
    /**
     * Workspace Role ID (UUID), whose permissions are inherited by this Workspace Role
     */
    inheritedRoleId?: pulumi.Input<string>;
    /**
     * Name of the Workspace Role
     */
    name?: pulumi.Input<string>;
    /**
     * List of scopes linked to the Workspace Role
     */
    scopes?: pulumi.Input<pulumi.Input<string>[]>;
}
