// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Get information about an multiple Work Pools.
 * <br>
 * Use this data source to search for multiple Work Pools. Defaults to fetching all Work Pools in the Workspace.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as prefect from "@pulumi/prefect";
 *
 * const allPools = prefect.getWorkPools({});
 * ```
 */
export function getWorkPools(args?: GetWorkPoolsArgs, opts?: pulumi.InvokeOptions): Promise<GetWorkPoolsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("prefect:index/getWorkPools:getWorkPools", {
        "accountId": args.accountId,
        "filterAnies": args.filterAnies,
        "workspaceId": args.workspaceId,
    }, opts);
}

/**
 * A collection of arguments for invoking getWorkPools.
 */
export interface GetWorkPoolsArgs {
    /**
     * Account ID (UUID), defaults to the account set in the provider
     */
    accountId?: string;
    /**
     * Work pool IDs (UUID) to search for (work pools with any matching UUID are returned)
     */
    filterAnies?: string[];
    /**
     * Workspace ID (UUID), defaults to the workspace set in the provider
     */
    workspaceId?: string;
}

/**
 * A collection of values returned by getWorkPools.
 */
export interface GetWorkPoolsResult {
    /**
     * Account ID (UUID), defaults to the account set in the provider
     */
    readonly accountId?: string;
    /**
     * Work pool IDs (UUID) to search for (work pools with any matching UUID are returned)
     */
    readonly filterAnies?: string[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Work pools returned by the server
     */
    readonly workPools: outputs.GetWorkPoolsWorkPool[];
    /**
     * Workspace ID (UUID), defaults to the workspace set in the provider
     */
    readonly workspaceId?: string;
}
/**
 * Get information about an multiple Work Pools.
 * <br>
 * Use this data source to search for multiple Work Pools. Defaults to fetching all Work Pools in the Workspace.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as prefect from "@pulumi/prefect";
 *
 * const allPools = prefect.getWorkPools({});
 * ```
 */
export function getWorkPoolsOutput(args?: GetWorkPoolsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetWorkPoolsResult> {
    return pulumi.output(args).apply((a: any) => getWorkPools(a, opts))
}

/**
 * A collection of arguments for invoking getWorkPools.
 */
export interface GetWorkPoolsOutputArgs {
    /**
     * Account ID (UUID), defaults to the account set in the provider
     */
    accountId?: pulumi.Input<string>;
    /**
     * Work pool IDs (UUID) to search for (work pools with any matching UUID are returned)
     */
    filterAnies?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Workspace ID (UUID), defaults to the workspace set in the provider
     */
    workspaceId?: pulumi.Input<string>;
}
