// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * The resource `workPool` represents a Prefect Cloud Work Pool. Work Pools represent infrastructure configurations for jobs across several common environments.
 *
 * Work Pools can be set up with default base job configurations, based on which type. Use this in conjunction with the `prefect.getWorkerMetadata` data source to bootstrap new Work Pools quickly.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as fs from "fs";
 * import * as prefect from "@pulumi/prefect";
 *
 * const exampleWorkPool = new prefect.WorkPool("exampleWorkPool", {
 *     type: "kubernetes",
 *     paused: false,
 *     workspaceId: "my-workspace-id",
 * });
 * // Use a JSON file to load a base job configuration
 * const exampleIndex_workPoolWorkPool = new prefect.WorkPool("exampleIndex/workPoolWorkPool", {
 *     type: "kubernetes",
 *     workspaceId: data.prefect_workspace.prd.id,
 *     paused: false,
 *     baseJobTemplate: fs.readFileSync("./base-job-template.json", "utf8"),
 * });
 * const workerMetadata = prefect.getWorkerMetadata({});
 * const examplePrefectIndex_workPoolWorkPool = new prefect.WorkPool("examplePrefectIndex/workPoolWorkPool", {
 *     type: "kubernetes",
 *     workspaceId: data.prefect_workspace.prd.id,
 *     paused: false,
 *     baseJobTemplate: workerMetadata.then(workerMetadata => workerMetadata.baseJobConfigs?.kubernetes),
 * });
 * ```
 *
 * ## Import
 *
 * Prefect Work Pools can be imported using the format `workspace_id,name`
 *
 * ```sh
 * $ pulumi import prefect:index/workPool:WorkPool example 00000000-0000-0000-0000-000000000000,kubernetes-work-pool
 * ```
 *
 * You can also import by name only if you have a workspace_id set in your provider
 *
 * ```sh
 * $ pulumi import prefect:index/workPool:WorkPool example kubernetes-work-pool
 * ```
 */
export class WorkPool extends pulumi.CustomResource {
    /**
     * Get an existing WorkPool resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: WorkPoolState, opts?: pulumi.CustomResourceOptions): WorkPool {
        return new WorkPool(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'prefect:index/workPool:WorkPool';

    /**
     * Returns true if the given object is an instance of WorkPool.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is WorkPool {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === WorkPool.__pulumiType;
    }

    /**
     * Account ID (UUID), defaults to the account set in the provider
     */
    public readonly accountId!: pulumi.Output<string | undefined>;
    /**
     * The base job template for the work pool, as a JSON string
     */
    public readonly baseJobTemplate!: pulumi.Output<string>;
    /**
     * The concurrency limit applied to this work pool
     */
    public readonly concurrencyLimit!: pulumi.Output<number | undefined>;
    /**
     * Timestamp of when the resource was created (RFC3339)
     */
    public /*out*/ readonly created!: pulumi.Output<string>;
    /**
     * The ID (UUID) of the default queue associated with this work pool
     */
    public /*out*/ readonly defaultQueueId!: pulumi.Output<string>;
    /**
     * Description of the work pool
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Name of the work pool
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Whether this work pool is paused
     */
    public readonly paused!: pulumi.Output<boolean>;
    /**
     * Type of the work pool, eg. kubernetes, ecs, process, etc.
     */
    public readonly type!: pulumi.Output<string>;
    /**
     * Timestamp of when the resource was updated (RFC3339)
     */
    public /*out*/ readonly updated!: pulumi.Output<string>;
    /**
     * Workspace ID (UUID), defaults to the workspace set in the provider
     */
    public readonly workspaceId!: pulumi.Output<string | undefined>;

    /**
     * Create a WorkPool resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: WorkPoolArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: WorkPoolArgs | WorkPoolState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as WorkPoolState | undefined;
            resourceInputs["accountId"] = state ? state.accountId : undefined;
            resourceInputs["baseJobTemplate"] = state ? state.baseJobTemplate : undefined;
            resourceInputs["concurrencyLimit"] = state ? state.concurrencyLimit : undefined;
            resourceInputs["created"] = state ? state.created : undefined;
            resourceInputs["defaultQueueId"] = state ? state.defaultQueueId : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["paused"] = state ? state.paused : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
            resourceInputs["updated"] = state ? state.updated : undefined;
            resourceInputs["workspaceId"] = state ? state.workspaceId : undefined;
        } else {
            const args = argsOrState as WorkPoolArgs | undefined;
            resourceInputs["accountId"] = args ? args.accountId : undefined;
            resourceInputs["baseJobTemplate"] = args ? args.baseJobTemplate : undefined;
            resourceInputs["concurrencyLimit"] = args ? args.concurrencyLimit : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["paused"] = args ? args.paused : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["workspaceId"] = args ? args.workspaceId : undefined;
            resourceInputs["created"] = undefined /*out*/;
            resourceInputs["defaultQueueId"] = undefined /*out*/;
            resourceInputs["updated"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(WorkPool.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering WorkPool resources.
 */
export interface WorkPoolState {
    /**
     * Account ID (UUID), defaults to the account set in the provider
     */
    accountId?: pulumi.Input<string>;
    /**
     * The base job template for the work pool, as a JSON string
     */
    baseJobTemplate?: pulumi.Input<string>;
    /**
     * The concurrency limit applied to this work pool
     */
    concurrencyLimit?: pulumi.Input<number>;
    /**
     * Timestamp of when the resource was created (RFC3339)
     */
    created?: pulumi.Input<string>;
    /**
     * The ID (UUID) of the default queue associated with this work pool
     */
    defaultQueueId?: pulumi.Input<string>;
    /**
     * Description of the work pool
     */
    description?: pulumi.Input<string>;
    /**
     * Name of the work pool
     */
    name?: pulumi.Input<string>;
    /**
     * Whether this work pool is paused
     */
    paused?: pulumi.Input<boolean>;
    /**
     * Type of the work pool, eg. kubernetes, ecs, process, etc.
     */
    type?: pulumi.Input<string>;
    /**
     * Timestamp of when the resource was updated (RFC3339)
     */
    updated?: pulumi.Input<string>;
    /**
     * Workspace ID (UUID), defaults to the workspace set in the provider
     */
    workspaceId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a WorkPool resource.
 */
export interface WorkPoolArgs {
    /**
     * Account ID (UUID), defaults to the account set in the provider
     */
    accountId?: pulumi.Input<string>;
    /**
     * The base job template for the work pool, as a JSON string
     */
    baseJobTemplate?: pulumi.Input<string>;
    /**
     * The concurrency limit applied to this work pool
     */
    concurrencyLimit?: pulumi.Input<number>;
    /**
     * Description of the work pool
     */
    description?: pulumi.Input<string>;
    /**
     * Name of the work pool
     */
    name?: pulumi.Input<string>;
    /**
     * Whether this work pool is paused
     */
    paused?: pulumi.Input<boolean>;
    /**
     * Type of the work pool, eg. kubernetes, ecs, process, etc.
     */
    type?: pulumi.Input<string>;
    /**
     * Workspace ID (UUID), defaults to the workspace set in the provider
     */
    workspaceId?: pulumi.Input<string>;
}
