// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Get information about an existing Workspace by handle.
 * <br>
 * Use this data source to obtain Workspace IDs
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as prefect from "@pulumi/prefect";
 *
 * const productionEnvironment = prefect.getWorkspace({
 *     id: "00000000-0000-0000-0000-000000000000",
 * });
 * ```
 */
export function getWorkspace(args?: GetWorkspaceArgs, opts?: pulumi.InvokeOptions): Promise<GetWorkspaceResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("prefect:index/getWorkspace:getWorkspace", {
        "accountId": args.accountId,
        "handle": args.handle,
        "id": args.id,
    }, opts);
}

/**
 * A collection of arguments for invoking getWorkspace.
 */
export interface GetWorkspaceArgs {
    /**
     * Account ID (UUID), defaults to the account set in the provider
     */
    accountId?: string;
    /**
     * Unique handle for the workspace
     */
    handle?: string;
    /**
     * Workspace ID (UUID)
     */
    id?: string;
}

/**
 * A collection of values returned by getWorkspace.
 */
export interface GetWorkspaceResult {
    /**
     * Account ID (UUID), defaults to the account set in the provider
     */
    readonly accountId?: string;
    /**
     * Timestamp of when the resource was created (RFC3339)
     */
    readonly created: string;
    /**
     * Description for the workspace
     */
    readonly description: string;
    /**
     * Unique handle for the workspace
     */
    readonly handle: string;
    /**
     * Workspace ID (UUID)
     */
    readonly id: string;
    /**
     * Name of the workspace
     */
    readonly name: string;
    /**
     * Timestamp of when the resource was updated (RFC3339)
     */
    readonly updated: string;
}
/**
 * Get information about an existing Workspace by handle.
 * <br>
 * Use this data source to obtain Workspace IDs
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as prefect from "@pulumi/prefect";
 *
 * const productionEnvironment = prefect.getWorkspace({
 *     id: "00000000-0000-0000-0000-000000000000",
 * });
 * ```
 */
export function getWorkspaceOutput(args?: GetWorkspaceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetWorkspaceResult> {
    return pulumi.output(args).apply((a: any) => getWorkspace(a, opts))
}

/**
 * A collection of arguments for invoking getWorkspace.
 */
export interface GetWorkspaceOutputArgs {
    /**
     * Account ID (UUID), defaults to the account set in the provider
     */
    accountId?: pulumi.Input<string>;
    /**
     * Unique handle for the workspace
     */
    handle?: pulumi.Input<string>;
    /**
     * Workspace ID (UUID)
     */
    id?: pulumi.Input<string>;
}
