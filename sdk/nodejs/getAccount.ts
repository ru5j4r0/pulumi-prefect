// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Get information about an existing Account.
 * <br>
 * Use this data source to obtain account-level attributes
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as prefect from "@pulumi/prefect";
 *
 * const myOrganization = prefect.getAccount({});
 * ```
 */
export function getAccount(args?: GetAccountArgs, opts?: pulumi.InvokeOptions): Promise<GetAccountResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("prefect:index/getAccount:getAccount", {
        "id": args.id,
    }, opts);
}

/**
 * A collection of arguments for invoking getAccount.
 */
export interface GetAccountArgs {
    /**
     * Account ID (UUID)
     */
    id?: string;
}

/**
 * A collection of values returned by getAccount.
 */
export interface GetAccountResult {
    /**
     * Whether or not this account allows public workspaces
     */
    readonly allowPublicWorkspaces: boolean;
    /**
     * Billing email to apply to the account's Stripe customer
     */
    readonly billingEmail: string;
    /**
     * Timestamp of when the resource was created (RFC3339)
     */
    readonly created: string;
    /**
     * Unique handle of the account
     */
    readonly handle: string;
    /**
     * Account ID (UUID)
     */
    readonly id?: string;
    /**
     * An optional for an external url associated with the account, e.g. https://prefect.io/
     */
    readonly link: string;
    /**
     * An optional physical location for the account, e.g. Washington, D.C.
     */
    readonly location: string;
    /**
     * Name of the account
     */
    readonly name: string;
    /**
     * Timestamp of when the resource was updated (RFC3339)
     */
    readonly updated: string;
}
/**
 * Get information about an existing Account.
 * <br>
 * Use this data source to obtain account-level attributes
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as prefect from "@pulumi/prefect";
 *
 * const myOrganization = prefect.getAccount({});
 * ```
 */
export function getAccountOutput(args?: GetAccountOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAccountResult> {
    return pulumi.output(args).apply((a: any) => getAccount(a, opts))
}

/**
 * A collection of arguments for invoking getAccount.
 */
export interface GetAccountOutputArgs {
    /**
     * Account ID (UUID)
     */
    id?: pulumi.Input<string>;
}
