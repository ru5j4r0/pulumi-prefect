// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Get information about an existing Workspace Role.
 * <br>
 * Use this data source read down the pre-defined Roles, to manage User and Service Account access.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as prefect from "@pulumi/prefect";
 *
 * const owner = prefect.getAccountRole({
 *     name: "Admin",
 * });
 * const member = prefect.getAccountRole({
 *     name: "Member",
 * });
 * ```
 */
export function getAccountRole(args: GetAccountRoleArgs, opts?: pulumi.InvokeOptions): Promise<GetAccountRoleResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("prefect:index/getAccountRole:getAccountRole", {
        "accountId": args.accountId,
        "name": args.name,
    }, opts);
}

/**
 * A collection of arguments for invoking getAccountRole.
 */
export interface GetAccountRoleArgs {
    /**
     * Account ID (UUID) where the resource resides
     */
    accountId?: string;
    /**
     * Name of the Account Role
     */
    name: string;
}

/**
 * A collection of values returned by getAccountRole.
 */
export interface GetAccountRoleResult {
    /**
     * Account ID (UUID) where the resource resides
     */
    readonly accountId?: string;
    /**
     * Timestamp of when the resource was created (RFC3339)
     */
    readonly created: string;
    /**
     * Account Role ID (UUID)
     */
    readonly id: string;
    /**
     * Boolean specifying if the Account Role is a system role
     */
    readonly isSystemRole: boolean;
    /**
     * Name of the Account Role
     */
    readonly name: string;
    /**
     * List of permissions linked to the Account Role
     */
    readonly permissions: string[];
    /**
     * Timestamp of when the resource was updated (RFC3339)
     */
    readonly updated: string;
}
/**
 * Get information about an existing Workspace Role.
 * <br>
 * Use this data source read down the pre-defined Roles, to manage User and Service Account access.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as prefect from "@pulumi/prefect";
 *
 * const owner = prefect.getAccountRole({
 *     name: "Admin",
 * });
 * const member = prefect.getAccountRole({
 *     name: "Member",
 * });
 * ```
 */
export function getAccountRoleOutput(args: GetAccountRoleOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAccountRoleResult> {
    return pulumi.output(args).apply((a: any) => getAccountRole(a, opts))
}

/**
 * A collection of arguments for invoking getAccountRole.
 */
export interface GetAccountRoleOutputArgs {
    /**
     * Account ID (UUID) where the resource resides
     */
    accountId?: pulumi.Input<string>;
    /**
     * Name of the Account Role
     */
    name: pulumi.Input<string>;
}
